name: CI

on:
  push:

jobs:
  check:
    name: Check (Rust ${{ matrix.rust }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        rust:
          - stable
          - beta
        experimental: [false]
        include:
          - rust: nightly
            experimental: true
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 1G
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install sccache
        env:
          SCCACHE_VERSION: 0.2.15
        # Roughly based on https://www.fluvio.io/blog/2021/04/github-actions-best-practices/
        run: |
          BASE_LINK=https://github.com/mozilla/sccache/releases/download
          SCCACHE_ARCHIVE=sccache-v$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p "$HOME/.local/bin"
          curl -L "$BASE_LINK/v$SCCACHE_VERSION/$SCCACHE_ARCHIVE.tar.gz" \
            | tar xz --strip-components=1 --directory="$HOME/.local/bin" $SCCACHE_ARCHIVE/sccache
          chmod +x "$HOME/.local/bin/sccache"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
          components: clippy, rustfmt
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Cache sccache artifacts
        uses: actions/cache@v2
        with:
          path: ~/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Check and lint
        run: cargo clippy --verbose --locked --all-features
      - name: Stop sccache server
        run: sccache --stop-server || true
